apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'

apply from: "$rootDir/tools/config/detekt/detekt.gradle"
apply from: "$rootDir/tools/dependencies-versions.gradle"

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

def storeKeyPropertiesFile = rootProject.file("storekey.properties")
def storeKeyProperties = new Properties()
storeKeyProperties.load(new FileInputStream(storeKeyPropertiesFile))

android {
    compileSdkVersion versions.android.compieSdk
    buildToolsVersion "30.0.3"

    signingConfigs {
        release {
            storeFile file(storeKeyProperties['FILE_KEY'])
            storePassword storeKeyProperties['STORE_KEY']
            keyAlias storeKeyProperties['ALIAS_KEY']
            keyPassword storeKeyProperties['STORE_KEY']
        }
    }

    defaultConfig {
        applicationId "com.example.marvelapp"
        minSdkVersion versions.android.minSdk
        targetSdkVersion versions.android.targetSdk
        versionCode versions.android.versionCode
        versionName "1.0"

        testInstrumentationRunner "com.example.marvelapp.KoinTestRunner"

        buildConfigField "String", "PUBLIC_KEY", apikeyProperties['PUBLIC_KEY']
        buildConfigField "String", "PRIVATE_KEY", apikeyProperties['PRIVATE_KEY']
        buildConfigField "String", "BASE_URL", '"https://gateway.marvel.com/v1/public/"'
    }

    buildTypes {
        debug{
            applicationIdSuffix '.debug'
            debuggable true
        }
        staging{
            initWith debug
            applicationIdSuffix '.staging'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro',
            'proguard-rules-staging.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    testOptions {
        animationsDisabled = true
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation project(':core')

    // AndroidX
    implementation "androidx.core:core-ktx:$versions.core"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    // Material design
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.legacy:legacy-support-v4:$versions.legacy"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:$versions.dataStore"

    //Lottie animation
    implementation "com.airbnb.android:lottie:$versions.lottie"

    // Koin
    implementation "io.insert-koin:koin-core:$versions.koin"
    implementation "io.insert-koin:koin-android:$versions.koin"

    // Room
    implementation "androidx.room:room-ktx:$versions.room"
    implementation "androidx.room:room-runtime:$versions.room"
    implementation "androidx.room:room-paging:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // Paging3
    implementation "androidx.paging:paging-runtime-ktx:$versions.paging"

    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // Shimmer
    implementation "com.facebook.shimmer:shimmer:$versions.shimmer"

    // Datastore
    implementation "androidx.datastore:datastore-preferences:$versions.datastore"

    //Firebase
    implementation platform("com.google.firebase:firebase-bom:$versions.firebase")
    implementation 'com.google.firebase:firebase-analytics-ktx'


    // Tests
    testImplementation project(":testing")
    testImplementation "androidx.room:room-testing:$versions.room"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    debugImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    debugImplementation "androidx.fragment:fragment-testing:$versions.fragmentTest"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.ext:junit:$versions.junitExt"
    androidTestImplementation "androidx.test:core:$versions.androidTest"
    androidTestImplementation "androidx.test:runner:$versions.androidTest"
    androidTestImplementation "androidx.test:rules:$versions.androidTest"
    androidTestImplementation "io.mockk:mockk-android:$versions.mockk"
    androidTestImplementation "io.insert-koin:koin-core:3.0.1"
    androidTestImplementation "org.mockito:mockito-android:2.22.0"
}